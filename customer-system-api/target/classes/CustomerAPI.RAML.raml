#%RAML 1.0
traits:
  basic:
    description: |
      This API supports Basic Authentication.
      type: Basic Authentication
  requestIdHeaderParameter:
    headers:
      api-request-id:
        description: 'Context insensitive correlation id of requests related to the session id for logging purposes, generated by the requesting consumer'
        type: string
title: Customers API
description: 'This is a customers API. '
documentation:
- title: Customer Service API
  content: API for basic customer operations like create, update, retrieve and delete
version: 1.0
(oas-info):
  contact:
    email: customers@products.com.au
  license:
    name: Insert Product owner here
    url: 'http://api.dev.customers.com.au'
annotationTypes:
  oas-info:
    properties:
      termsOfService?: string
      contact?:
        properties:
          name?: string
          url?: string
          email?: string
      license?:
        properties:
          name?: string
          url?: string
    allowedTargets: API
  oas-tags-definition:
    allowedTargets: API
    type: array
    items:
      properties:
        name: string
        description?: string
        externalDocs?:
          properties:
            url: string
            description?: string
  oas-summary:
    type: string
    allowedTargets: Method
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
(oas-tags-definition):
  - name: customers
    description: Basic customer operations
protocols:
  - HTTP
  - HTTPS
baseUri: /v1
baseUriParameters: {}
securitySchemes:
  auth:
    type: x-custom
    describedBy:
      headers: 
        apikey:
          required: true
          displayName: apiKey
          description: API Key is mandatory and issued to the consuming application. Individual consumers are authenticated via AD lookup.
          type: string
          
types:
  customerDetailsResult:
    displayName: getCustomerResponse
    description: The collection of customers
    type: array
    items:
      type: Customer
  Order:
    type: object
    displayName: OrderField Details
    properties:
      id:
        type: integer
        format: int64
        required: false
      shipDate:
        type: datetime
        required: false
      status:
        description: Order Status
        type: string
        enum:
          - placed
          - approved
          - delivered
        required: false
      complete:
        default: false
        type: boolean
        required: false
  Customer:
    type: object
    properties:
      id:
        type: integer
        format: int64
        required: false
        example: 0123
      firstname:
        type: string
        example: foo
        required: true
      lastname:
        type: string
        example: bar
        required: true
      addresses:
        type: array
        items:
          type: Address
  Address:
    type: object
    properties:
      street:
        type: string
        required: true
        example: 45 Tory St
      postcode:
        type: integer
        required: true
        example: 6011
      city:
        type: string
        required: false
        example: Wellington
      country:
        type: string
        required: true
        example: Australia
      type:
        description: Order Status
        type: string
        enum:
          - residential
          - business
          - postal
        required: false
  Error:
    displayName: Error
    description: An error item containing error codes and descriptions. Note that the error descriptions will be normalised
    type: object
    properties:
      code:
        required: true
        displayName: code
        description: An error code - should be used in conjunction with the HTTP response code
        type: string
      message:
        required: true
        displayName: message
        description: A short description of the error
        type: string
      _links:
        required: false
        displayName: _links
        description:  Links to zero or many related resources
        type: object
        
  LinkModel:
    displayName: linkModel
    type: object
    properties:
      href:
        required: true
        displayName:  href
        description: A link to the related resource. In an error scenario this is likely to be something such as link to a support portal.
        type: string
      name: 
        required: false
        displayName: name
        description:  OPTIONAL, May be used as secondary key for selecting Link objects which share the same relation type.
        type: string
    
/customers:
  get:
    securedBy:
      - auth
    description: Retrieve information on existing customers by based on limit and start Index
    is:
      - requestIdHeaderParameter
      
    displayName: retrieveCustomers
    responses:
      '200':
        description: successful operation
        headers:
          api-request-id:
            type: string
        body:
          application/json:
            type: customerDetailsResult
      '400':
        description: Invalid status value
        headers:
          api-request-id:
            type: string
    queryParameters:
      limit:
        type: number
        required: false
        default: 1
      start:
        type: number
        required: false
        default: 1
    (oas-summary): Retrieve all customers based on limit and start Index
    (oas-tags):
      - customers
  post:
    description: Create new customer
    securedBy:
      - auth
    is:
      - requestIdHeaderParameter
    displayName: createcustomer
    responses:
      '201':
        description: Created
        headers:
          api-request-id:
            type: string
        body:
          application/json:
            type: Customer
      '400':
        description: Bad Request
      '405':
        description: Invalid input
    body:
      application/json:
        description: Customer details that is to be created/added
        type: Customer
        (oas-body-name): body
    (oas-summary): Add new customer to the datastore
    (oas-tags):
      - customers
  '/{customerid}':
    get:
      securedBy:
      - auth
      description: Retrieve information on an existing customer by customerid
      is:
        - requestIdHeaderParameter
      displayName: retrieveCustomerIdbyId
      responses:
        '200':
          description: successful operation. Note- an empty array will be returned if there is customerid found
          headers:
            api-request-id:
              type: string
          body:
            application/json:
              type: Customer
        '404':
          description: customer id not found
          headers:
            api-request-id:
              type: string
      (oas-summary): Retrieve customer by customerid
      (oas-tags):
        - customers
    put:
      securedBy:
      - auth
      description: Update customer by customerid
      is:
        - requestIdHeaderParameter
      displayName: updatecustomerByCustomerId
      body:
        application/json:
          description: Customer details that is to be updated
          type: Customer
      responses:
        '200':
          description: successful operation
          headers:
            api-request-id:
              required: true
              description: 'Context insensitive correlation id of requests related to the session id for logging purposes, generated by the requesting consumer'
              type: string
               
          body:
            application/json:
              type: Customer
        '400':
          description: Invalid status value
          headers:
            api-request-id:
              type: string
      (oas-summary): Retrieve customer by customerid
      (oas-tags):
        - customers
    delete:
      securedBy:
      - auth
      description: Deletes a customer
      is:
        - requestIdHeaderParameter
      displayName: deleteCustomer
      responses:
        '204':
          description: No Content
          headers:
            api-request-id:
              type: string
        '400':
          description: Invalid Customer id supplied
          headers:
            api-request-id:
              type: string
        '404':
          description: customer {customerid} not found
          headers:
            api-request-id:
              type: string
      (oas-summary): Deletes a customer
      (oas-tags):
        - customers
    uriParameters:
      customerid:
        type: number
